version: 2
jobs:
  build:
    working_directory: ~/work/pos/njoy
    shell: /bin/bash --login
    environment:
      CC_TEST_REPORTER_ID: 70a3a84db9ff477fe82c91874041ca56e647bd6402e328d290875ef3f84bd212
      RAILS_ENV: test
      RACK_ENV: test
      COVERAGE: true
    docker:
      - image: circleci/ruby:2.6.0-node-browsers
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: njoy
      - image: circleci/postgres:9.5-alpine
        environment:
          POSTGRES_USER: njoy
          POSTGRES_DB: njoy_test
          POSTGRES_PASSWORD: ""

    steps:
      - checkout

      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v

      # Restore bundle cache
      - restore_cache:
          keys:
            - njoy-{{ checksum "Gemfile.lock" }}
            - njoy-

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      # Store bundle cache
      - save_cache:
          key: njoy-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: bin/rails db:migrate

      - run:
          name: Install Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - run:
          name: Run tests
          command: |
            mkdir -p test-results/rspec test-artifacts
            ./cc-test-reporter before-build
            TESTFILES=$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
            bundle exec rspec --profile 10 \
                              --color \
                              --order random \
                              --format RspecJunitFormatter \
                              --out test-results/rspec/rspec.xml \
                              --format progress \
                              -- ${TESTFILES}
            ./cc-test-reporter after-build

      - run:
          name: Code Climate Test Coverage
          command: |
            ./cc-test-reporter format-coverage -t simplecov -o "coverage/codeclimate.coverage.json"

      - persist_to_workspace:
          root: coverage
          paths:
            - codeclimate.coverage.json

      - store_test_results:
          path: test-results

      - store_artifacts:
          path: test-artifacts

  deploy:
      docker:
        - image: buildpack-deps:trusty
      steps:
        - checkout
        - run:
            name: Deploy Master to Heroku
            command: |
              git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

  # upload-coverage:
  #   docker:
  #     - image: circleci/ruby:2.6.0-node-browsers
  #   environment:
  #     CC_TEST_REPORTER_ID: c3ff91e23ea0fea718bb62dae0a8a5440dc082d5d2bb508af6b33d0babac479a
  #
  #   steps:
  #     - run:
  #         name: Install Code Climate Test Reporter
  #         command: |
  #           curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  #           chmod +x ./cc-test-reporter
  #     - run:
  #         command: |
  #           ./cc-test-reporter sum-coverage --output - codeclimate.coverage.json | ./cc-test-reporter upload-coverage --debug --input -

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
